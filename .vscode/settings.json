{
  //* Workbench
  "workbench.colorTheme": "One Hunter Theme Vercel",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.editor.tabCloseButton": "right",
  "workbench.settings.editor": "json",
  "workbench.editor.tabSizing": "shrink",
  "workbench.sideBar.location": "right",
  "workbench.startupEditor": "newUntitledFile",
  "workbench.activityBar.visible": true,
  "workbench.colorCustomizations": {
    "editor.foreground": "#e2e2e2",
    "editorCursor.foreground": "#e2e2e2",
    "tab.activeBorder": "#EAB780",
    "tab.hoverBorder": "#E76572",
    "sideBarTitle.foreground": "#EAB780"
  },

  //* Window
  "window.restoreWindows": "all",

  //* Editor
  "editor.stickyScroll.enabled": true,
  "editor.accessibilitySupport": "off",
  "editor.acceptSuggestionOnEnter": "off",
  "editor.fontFamily": "Input Mono, Space Mono, Recursive, Jetbrains Mono, MesloLGS NF, Monaco, Courier New, monospace",
  "editor.fontSize": 13,
  "editor.fontWeight": "400",
  "editor.fontLigatures": false,
  "editor.letterSpacing": 0,
  "editor.linkedEditing": true,
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.cursorWidth": 3,
  "editor.cursorBlinking": "expand",
  "editor.cursorStyle": "line",
  "editor.suggestSelection": "first",
  "editor.inlineSuggest.enabled": true,
  "editor.formatOnPaste": false,
  "editor.formatOnSave": true,
  "editor.detectIndentation": true,
  "editor.lineNumbers": "on",
  "editor.minimap.enabled": false,
  "editor.wordWrap": "on",
  "editor.wordWrapColumn": 120,
  "editor.occurrencesHighlight": false,
  "editor.snippetSuggestions": "inline",
  "editor.tabSize": 2,
  "editor.smoothScrolling": true,
  "editor.hover.enabled": true,
  "editor.renderWhitespace": "boundary",
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.codeActionsOnSave": {
    "source.fixAll": true,
    "addMissingImports": true
  },
  "editor.hover.delay": 200,
  "editor.quickSuggestions": {
    "comments": "inline",
    "strings": "on"
  },

  //* Explorer
  "explorer.autoReveal": true,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.openEditors.visible": 0,

  //* Files
  "files.insertFinalNewline": true,
  "files.trimTrailingWhitespace": true,
  "files.autoSave": "onFocusChange",
  "files.autoSaveDelay": 7000,
  "files.defaultLanguage": "{activeEditorLanguage}",
  "files.associations": {
    "*.html": "twig",
    "**/*.html": "html",
    "**/templates/**/*.html": "django-html",
    "**/templates/**/*": "django-txt",
    "**/requirements{/**,*}.{txt,in}": "pip-requirements",
    "*.js": "javascript",
    "*.md": "markdown"
  },
  "files.exclude": {
    "**/node_modules": true,
    "**/.idea": true
  },

  //* Emmet
  "emmet.excludeLanguages": ["markdown"],
  "emmet.showSuggestionsAsSnippets": true,
  "emmet.triggerExpansionOnTab": true,
  "emmet.syntaxProfiles": {
    "postcss": "css"
  },
  "emmet.includeLanguages": {
    "postcss": "css",
    "javascript": "javascriptreact",
    "twig": "html",
    "django-html": "html",
    "markdown": "javascriptreact"
  },

  //* Terminal
  "terminal.explorerKind": "external",
  "terminal.external.osxExec": "iTerm.app",
  "terminal.integrated.fontFamily": "Input Mono, Space Mono, Recursive, Jetbrains Mono, MesloLGS NF, Monaco, Courier New, monospace",
  "terminal.integrated.allowChords": false,
  "terminal.integrated.fontSize": 12,
  "terminal.integrated.drawBoldTextInBrightColors": false,
  "terminal.integrated.env.osx": {
    "FIG_NEW_SESSION": "1"
  },

  //* Prettier
  "prettier.arrowParens": "always",
  "prettier.bracketSameLine": true,
  "prettier.bracketSpacing": true,
  "prettier.embeddedLanguageFormatting": "auto",
  "prettier.htmlWhitespaceSensitivity": "css",
  "prettier.insertPragma": false,
  "prettier.jsxSingleQuote": false,
  "prettier.printWidth": 120,
  "prettier.proseWrap": "preserve",
  "prettier.quoteProps": "as-needed",
  "prettier.requirePragma": false,
  "prettier.semi": true,
  "prettier.singleQuote": false,
  "prettier.tabWidth": 2,
  "prettier.trailingComma": "es5",
  "prettier.useTabs": false,
  "prettier.useEditorConfig": false,
  "prettier.vueIndentScriptAndStyle": false,
  "prettier.documentSelectors": ["**/*.astro"],

  //* Default formatters
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[vue]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[twig]": {
    "editor.defaultFormatter": "mblode.twig-language-2"
  },
  "[shellscript]": {
    "editor.defaultFormatter": "shakram02.bash-beautify"
  },
  "[prisma]": {
    "editor.defaultFormatter": "Prisma.prisma"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer"
  },
  "[xml]": {
    "editor.defaultFormatter": "redhat.vscode-xml"
  },
  "[svelte]": {
    "editor.defaultFormatter": "svelte.svelte-vscode"
  },
  "[svg]": {
    "editor.defaultFormatter": "redhat.vscode-xml"
  },
  "[astro]": {
    "editor.defaultFormatter": "astro-build.astro-vscode"
  },

  //* Languages
  "css.lint.important": "warning",
  "scss.lint.important": "warning",
  "css.lint.duplicateProperties": "warning",
  "css.lint.zeroUnits": "warning",
  "html.format.enable": true,
  "html.format.wrapLineLength": 120,
  "html.format.wrapAttributes": "force-aligned",
  "html-css-class-completion.enableEmmetSupport": true,
  "html-css-class-completion.CSSLanguages": ["css", "sass", "scss"],
  "html-css-class-completion.includeGlobPattern": "**/*.{scss,vue,css,html}",
  "html-css-class-completion.JavaScriptLanguages": ["vue", "javascript", "javascriptreact", "typescriptreact"],
  "javascript.format.enable": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "javascript.preferences.importModuleSpecifier": "non-relative",
  "javascript.validate.enable": true,
  "javascript.inlayHints.enumMemberValues.enabled": true,
  "markdown.preview.scrollEditorWithPreview": true,
  "markdown.preview.scrollPreviewWithEditor": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.preferences.importModuleSpecifier": "non-relative",
  "typescript.inlayHints.enumMemberValues.enabled": true,
  "typescript.suggest.autoImports": false,
  "scss.lint.duplicateProperties": "warning",
  "tailwindCSS.classAttributes": ["class", "className", "ngClass", "\\w*[cC]lass(es)*"],
  "tailwindCSS.emmetCompletions": true,
  "tailwindCSS.validate": true,
  "tailwindCSS.includeLanguages": {
    "javascript": "javascriptreact",
    "vue": "vue",
    "html": "html",
    "svelte": "html",
    "twig": "twig",
    "django-html": "django-html"
  },
  "postcssSorting.config": {
    "properties-order": "alphabetical"
  },
  "yaml.format.printWidth": 100,

  //* Git
  "git.enableSmartCommit": true,
  "git.confirmSync": false,
  "git.autofetch": true,
  "scm.alwaysShowActions": true,
  "scm.alwaysShowRepositories": true,

  //* Gitlens
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.hovers.enabled": false,
  "gitlens.statusBar.enabled": false,
  "gitlens.views.commits.showBranchComparison": false,
  "gitlens.views.commits.pullRequests.enabled": false,
  "gitlens.views.formats.commits.label": "${message}",
  "gitlens.menus": {
    "editor": false,
    "editorGroup": false,
    "editorTab": false,
    "explorer": false,
    "scm": false,
    "scmGroupInline": false,
    "scmGroup": false,
    "scmItem": false
  },

  //* Eslint
  "eslint.validate": ["javascript", "javascriptreact", "astro", "typescript", "typescriptreact"],
  "eslint.packageManager": "npm",
  "eslint.options": {
    "overrideConfig": {
      "env": {
        "browser": true,
        "es6": true
      },
      "parserOptions": {
        "ecmaVersion": 2019,
        "sourceType": "module",
        "ecmaFeatures": {
          "jsx": true
        }
      },
      "rules": {
        "no-debugger": "off"
      }
    }
  },

  //* Advanced New File
  "advancedNewFile.showInformationMessages": true,
  "advancedNewFile.convenienceOptions": ["last", "current", "root"],
  "advancedNewFile.exclude": {
    "node_modules": true,
    "node_modules_electron": true,
    "dev": true,
    "dist": true
  },

  //* NPM
  "npm.runSilent": true,
  "npm.packageManager": "npm",

  //* Colorize
  "colorize.include": ["**/*.css", "**/*.scss", "**/*.sass", "**/*.less", "**/*.styl"],
  "colorize.colorized_variables": ["CSS", "LESS", "SASS", "STYLUS"],
  "colorize.languages": ["css", "sass", "scss", "less", "postcss", "sss", "stylus", "xml", "svg"],

  //* Themes
  "editor.tokenColorCustomizations": {
    "[Community Material Theme Ocean High Contrast]": {
      "textMateRules": [
        {
          "scope": "variable",
          "settings": {
            "foreground": "#F07178"
          }
        },
        {
          "scope": "keyword.control",
          "settings": {
            "foreground": "#C792EA",
            "fontStyle": "italic"
          }
        },
        {
          "scope": "string",
          "settings": {
            "foreground": "#30FF78"
          }
        }
      ]
    },
    "[Moonlight Italic]": {
      "textMateRules": [
        {
          "scope": ["string"],
          "settings": {
            "foreground": "#43FF8F"
          }
        },
        {
          "scope": [
            "variable.parameter",
            "meta.tag.tsx variable",
            "variable.interpolation.scss variable.other.object",
            "variable.interpolation.scss variable"
          ],
          "settings": {
            "foreground": "#33D9EF"
          }
        },
        {
          "scope": [
            "keyword.control.flow",
            "storage.type",
            "keyword.control.export",
            "keyword.control.import",
            "keyword.control.from",
            "keyword.control.default",
            "support.type"
          ],
          "settings": {
            "foreground": "#9886EF"
          }
        },
        {
          "scope": ["entity.name.function", "meta.export.default.tsx variable"],
          "settings": {
            "foreground": "#70B0FF"
          }
        },
        {
          "scope": [
            "variable",
            "support.class.component",
            "support.constant.property-value.css",
            "meta.object-literal.key",
            "variable.other.property"
          ],
          "settings": {
            "foreground": "#FD7F86"
          }
        },
        {
          "scope": ["meta.import.tsx variable"],
          "settings": {
            "foreground": "#FFD88C"
          }
        },
        {
          "scope": ["entity.other.attribute-name"],
          "settings": {
            "foreground": "#FFBD76"
          }
        },
        {
          "scope": ["entity.name"],
          "settings": {
            "foreground": "#3FE3A4"
          }
        }
      ]
    },
    "[Electron]": {
      "textMateRules": [
        {
          "scope": [
            "string.quoted.single.js",
            "string.quoted.double.js",
            "punctuation.definition.string",
            "source.python string",
            "source.css.scss string"
          ],
          "settings": {
            "foreground": "#74cb92df"
          }
        },
        {
          "scope": [
            "meta.objectliteral.js",
            "punctuation.definition.parameters.end.js",
            "punctuation.definition.parameters.begin.js",
            "punctuation.definition.block.js",
            "meta.brace.round.js",
            "meta.array.literal.js"
          ],
          "settings": {
            "foreground": "#f2f2f2"
          }
        },
        {
          "scope": ["keyword", "storage.type"],
          "settings": {
            "foreground": "#b769cf"
          }
        },
        {
          "scope": ["keyword.operator"],
          "settings": {
            "foreground": "#56B6C2"
          }
        },
        {
          "scope": [
            "variable.parameter.js",
            "variable.other.readwrite.js",
            "meta.object-literal.key.js",
            "constant.character",
            "source.python variable.parameter",
            "source.css.scss keyword"
          ],
          "settings": {
            "foreground": "#E26674"
          }
        },
        {
          "scope": ["comment"],
          "settings": {
            "fontStyle": "italic"
          }
        },
        {
          "scope": [
            "support.type.property-name.css",
            "support.type",
            "string.quoted.single.html",
            "string.quoted.double.html"
          ],
          "settings": {
            "foreground": "#56A3B1"
          }
        },
        {
          "scope": ["meta.property-value support.constant.property-value.css"],
          "settings": {
            "foreground": "#DC9656"
          }
        },
        {
          "scope": ["source.python entity.name.function", "source.css.scss entity.name.function"],
          "settings": {
            "foreground": "#71B1FE"
          }
        },
        {
          "scope": ["source.python support.type", "source.python entity.name.type.class"],
          "settings": {
            "foreground": "#FFCB6B"
          }
        },
        {
          "scope": ["source.python keyword.control", "source.python keyword.operator"],
          "settings": {
            "foreground": "#89DDFF"
          }
        },
        {
          "scope": ["source.python entity.other.inherited-class"],
          "settings": {
            "foreground": "#FFCB6B",
            "fontStyle": "italic underline"
          }
        }
      ]
    },
    "[One Dark Pro]": {
      "textMateRules": [
        {
          "scope": ["invalid.illegal"],
          "settings": {
            "foreground": "#E06C75"
          }
        }
      ]
    }
  },

  //* Reszta
  "autoimport.filesToScan": "**/*.{js,jsx,ts,tsx}",
  "breadcrumbs.enabled": true,
  "breadcrumbs.showFields": false,
  "trailing-spaces.trimOnSave": true,
  "search.exclude": {
    "**/node_modules": true,
    "**/bower_components": true,
    "**/coverage": true,
    "**/dist": true,
    "**/build": true,
    "**/.build": true,
    "**/.gh-pages": true
  },
  "diffEditor.ignoreTrimWhitespace": false,
  "telemetry.telemetryLevel": "off",
  "redhat.telemetry.enabled": false,
  "cSpell.language": "en, pl-PL",
  "cSpell.userWords": [
    "backendu",
    "clsx",
    "daisyui",
    "esbenp",
    "Flexbox",
    "frameworkach",
    "frontendzie",
    "headlessui",
    "hookfeorm",
    "hookform",
    "jakubsoboczynski",
    "Jetbrains",
    "loglevel",
    "Meslo",
    "NEXTAUTH",
    "Nuxt",
    "Parens",
    "partytown",
    "Pressable",
    "raycast",
    "Renminbi",
    "Soboczyński",
    "stylelint",
    "SUPABASE",
    "superjson",
    "tailwindcss",
    "tanstack",
    "teziovsky",
    "toastify",
    "trpc",
    "typecheck",
    "viselect",
    "Vuelidate",
    "Vuetify",
    "Vuex",
    "webp"
  ],
  "keyboard.dispatch": "keyCode",
  "conventionalCommits.gitmoji": false,
  "conventionalCommits.scopes": [],
  "errorLens.fontStyleItalic": true,
  "githubPullRequests.pullBranch": "never",
  "workbench.editor.enablePreview": false,
  "better-comments.highlightPlainText": true,
  "turboConsoleLog.addSemicolonInTheEnd": true,
  "svelte.enable-ts-plugin": true,
  "svelte.plugin.svelte.note-new-transformation": false,
  "github.copilot.enable": {
    "*": true,
    "plaintext": false,
    "markdown": true,
    "scminput": false,
    "yaml": false
  },
  "editor.tabCompletion": "onlySnippets",
  "svg.preview.mode": "svg",
  "template-string-converter.validLanguages": [
    "svelte",
    "typescript",
    "javascript",
    "typescriptreact",
    "javascriptreact"
  ],
  "git.openRepositoryInParentFolders": "always",
  "security.workspace.trust.untrustedFiles": "open",
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "//": "Last update at 10/07/2023, 17:07:24",
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cs": "$(capture).*.cs",
    "*.cshtml": "$(capture).cshtml.cs",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.go": "$(capture)_test.go",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.mts": "$(capture).mts.map, $(capture).*.mts, $(capture)_*.mts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
    "*.xaml": "$(capture).xaml.cs",
    "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
    "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
    "I*.cs": "$(capture).cs",
    "Pipfile": ".editorconfig, .flake8, .isort.cfg, .python-version, Pipfile, Pipfile.lock, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
    "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "go.work": "go.work.sum",
    "hatch.toml": ".editorconfig, .flake8, .isort.cfg, .python-version, hatch.toml, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .nuxtignore, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .release-please*.json, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
    "pyproject.toml": ".editorconfig, .flake8, .isort.cfg, .pdm-python, .pdm.toml, .python-version, MANIFEST.in, Pipfile, Pipfile.lock, hatch.toml, pdm.lock, poetry.lock, pyproject.toml, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, setup.py, tox.ini",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "readme*": "authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "requirements.txt": ".editorconfig, .flake8, .isort.cfg, .python-version, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "rush.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .release-please*.json, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "setup.cfg": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, tox.ini",
    "setup.py": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, setup.py, tox.ini",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
  },
  "window.zoomLevel": -1,
  "tailwind-fold.autoFold": false
}
